// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CallOnExternalPositionExecutedForFund extends ethereum.Event {
  get params(): CallOnExternalPositionExecutedForFund__Params {
    return new CallOnExternalPositionExecutedForFund__Params(this);
  }
}

export class CallOnExternalPositionExecutedForFund__Params {
  _event: CallOnExternalPositionExecutedForFund;

  constructor(event: CallOnExternalPositionExecutedForFund) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get comptrollerProxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get externalPosition(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get actionId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get actionArgs(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get assetsToTransfer(): Array<Address> {
    return this._event.parameters[5].value.toAddressArray();
  }

  get amountsToTransfer(): Array<BigInt> {
    return this._event.parameters[6].value.toBigIntArray();
  }

  get assetsToReceive(): Array<Address> {
    return this._event.parameters[7].value.toAddressArray();
  }
}

export class ExternalPositionDeployedForFund extends ethereum.Event {
  get params(): ExternalPositionDeployedForFund__Params {
    return new ExternalPositionDeployedForFund__Params(this);
  }
}

export class ExternalPositionDeployedForFund__Params {
  _event: ExternalPositionDeployedForFund;

  constructor(event: ExternalPositionDeployedForFund) {
    this._event = event;
  }

  get comptrollerProxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultProxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get externalPosition(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get externalPositionTypeId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class ExternalPositionTypeInfoUpdated extends ethereum.Event {
  get params(): ExternalPositionTypeInfoUpdated__Params {
    return new ExternalPositionTypeInfoUpdated__Params(this);
  }
}

export class ExternalPositionTypeInfoUpdated__Params {
  _event: ExternalPositionTypeInfoUpdated;

  constructor(event: ExternalPositionTypeInfoUpdated) {
    this._event = event;
  }

  get typeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lib(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get parser(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ValidatedVaultProxySetForFund extends ethereum.Event {
  get params(): ValidatedVaultProxySetForFund__Params {
    return new ValidatedVaultProxySetForFund__Params(this);
  }
}

export class ValidatedVaultProxySetForFund__Params {
  _event: ValidatedVaultProxySetForFund;

  constructor(event: ValidatedVaultProxySetForFund) {
    this._event = event;
  }

  get comptrollerProxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultProxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ExternalPositionManager extends ethereum.SmartContract {
  static bind(address: Address): ExternalPositionManager {
    return new ExternalPositionManager("ExternalPositionManager", address);
  }

  getExternalPositionFactory(): Address {
    let result = super.call(
      "getExternalPositionFactory",
      "getExternalPositionFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getExternalPositionFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getExternalPositionFactory",
      "getExternalPositionFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getExternalPositionLibForType(_typeId: BigInt): Address {
    let result = super.call(
      "getExternalPositionLibForType",
      "getExternalPositionLibForType(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_typeId)]
    );

    return result[0].toAddress();
  }

  try_getExternalPositionLibForType(
    _typeId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getExternalPositionLibForType",
      "getExternalPositionLibForType(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_typeId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getExternalPositionParserForType(_typeId: BigInt): Address {
    let result = super.call(
      "getExternalPositionParserForType",
      "getExternalPositionParserForType(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_typeId)]
    );

    return result[0].toAddress();
  }

  try_getExternalPositionParserForType(
    _typeId: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getExternalPositionParserForType",
      "getExternalPositionParserForType(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(_typeId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFundDeployer(): Address {
    let result = super.call(
      "getFundDeployer",
      "getFundDeployer():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFundDeployer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFundDeployer",
      "getFundDeployer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getOwner(): Address {
    let result = super.call("getOwner", "getOwner():(address)", []);

    return result[0].toAddress();
  }

  try_getOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("getOwner", "getOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPolicyManager(): Address {
    let result = super.call(
      "getPolicyManager",
      "getPolicyManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPolicyManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPolicyManager",
      "getPolicyManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVaultProxyForFund(_comptrollerProxy: Address): Address {
    let result = super.call(
      "getVaultProxyForFund",
      "getVaultProxyForFund(address):(address)",
      [ethereum.Value.fromAddress(_comptrollerProxy)]
    );

    return result[0].toAddress();
  }

  try_getVaultProxyForFund(
    _comptrollerProxy: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getVaultProxyForFund",
      "getVaultProxyForFund(address):(address)",
      [ethereum.Value.fromAddress(_comptrollerProxy)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _fundDeployer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _externalPositionFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _policyManager(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivateForFundCall extends ethereum.Call {
  get inputs(): ActivateForFundCall__Inputs {
    return new ActivateForFundCall__Inputs(this);
  }

  get outputs(): ActivateForFundCall__Outputs {
    return new ActivateForFundCall__Outputs(this);
  }
}

export class ActivateForFundCall__Inputs {
  _call: ActivateForFundCall;

  constructor(call: ActivateForFundCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class ActivateForFundCall__Outputs {
  _call: ActivateForFundCall;

  constructor(call: ActivateForFundCall) {
    this._call = call;
  }
}

export class DeactivateForFundCall extends ethereum.Call {
  get inputs(): DeactivateForFundCall__Inputs {
    return new DeactivateForFundCall__Inputs(this);
  }

  get outputs(): DeactivateForFundCall__Outputs {
    return new DeactivateForFundCall__Outputs(this);
  }
}

export class DeactivateForFundCall__Inputs {
  _call: DeactivateForFundCall;

  constructor(call: DeactivateForFundCall) {
    this._call = call;
  }
}

export class DeactivateForFundCall__Outputs {
  _call: DeactivateForFundCall;

  constructor(call: DeactivateForFundCall) {
    this._call = call;
  }
}

export class ReceiveCallFromComptrollerCall extends ethereum.Call {
  get inputs(): ReceiveCallFromComptrollerCall__Inputs {
    return new ReceiveCallFromComptrollerCall__Inputs(this);
  }

  get outputs(): ReceiveCallFromComptrollerCall__Outputs {
    return new ReceiveCallFromComptrollerCall__Outputs(this);
  }
}

export class ReceiveCallFromComptrollerCall__Inputs {
  _call: ReceiveCallFromComptrollerCall;

  constructor(call: ReceiveCallFromComptrollerCall) {
    this._call = call;
  }

  get _caller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _actionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _callArgs(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ReceiveCallFromComptrollerCall__Outputs {
  _call: ReceiveCallFromComptrollerCall;

  constructor(call: ReceiveCallFromComptrollerCall) {
    this._call = call;
  }
}

export class SetConfigForFundCall extends ethereum.Call {
  get inputs(): SetConfigForFundCall__Inputs {
    return new SetConfigForFundCall__Inputs(this);
  }

  get outputs(): SetConfigForFundCall__Outputs {
    return new SetConfigForFundCall__Outputs(this);
  }
}

export class SetConfigForFundCall__Inputs {
  _call: SetConfigForFundCall;

  constructor(call: SetConfigForFundCall) {
    this._call = call;
  }

  get _comptrollerProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _vaultProxy(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class SetConfigForFundCall__Outputs {
  _call: SetConfigForFundCall;

  constructor(call: SetConfigForFundCall) {
    this._call = call;
  }
}

export class UpdateExternalPositionTypesInfoCall extends ethereum.Call {
  get inputs(): UpdateExternalPositionTypesInfoCall__Inputs {
    return new UpdateExternalPositionTypesInfoCall__Inputs(this);
  }

  get outputs(): UpdateExternalPositionTypesInfoCall__Outputs {
    return new UpdateExternalPositionTypesInfoCall__Outputs(this);
  }
}

export class UpdateExternalPositionTypesInfoCall__Inputs {
  _call: UpdateExternalPositionTypesInfoCall;

  constructor(call: UpdateExternalPositionTypesInfoCall) {
    this._call = call;
  }

  get _typeIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _libs(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _parsers(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class UpdateExternalPositionTypesInfoCall__Outputs {
  _call: UpdateExternalPositionTypesInfoCall;

  constructor(call: UpdateExternalPositionTypesInfoCall) {
    this._call = call;
  }
}
